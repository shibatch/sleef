language: c

# Default linux jobs
os: linux
sudo: required
dist: xenial

# Include osx jobs
matrix:
  include:
    # - os: osx
    #   osx_image: xcode8
    #   compiler: gcc
    #   env:
    #     - MATRIX_EVAL="brew install gcc@6 && CC=gcc-6" # install and use gcc
    # - os: osx
    #   compiler: clang # use default apple clang
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - ubuntu-toolchain-r-test
    #       packages:
    #         - g++-7
    #   env:
    #     - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    # - os: linux
    #   addons:
    #     apt:
    #       sources:
    #         - llvm-toolchain-trusty-5.0
    #       packages:
    #         - clang-5.0
    #   env:
    #     - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
     - os: linux
       env:
         - LABEL="aarch64-gcc"

before_install:
     - chmod +x ${TRAVIS_BUILD_DIR}/travis/*.sh
     - sudo ${TRAVIS_BUILD_DIR}/travis/before_install.${LABEL}.sh
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget -q ${SDE_URL}                            ; fi
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then tar xf sde-external-8.12.0-2017-10-23-lin.tar.bz2; fi
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=${PATH}:${TRAVIS_BUILD_DIR}/sde-external-8.12.0-2017-10-23-lin; fi
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo add-apt-repository -y ppa:adrozdoff/cmake; fi
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -qq update                       ; fi
  # - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y cmake libmpfr-dev     ; fi
  # - if [[ "$TRAVIS_OS_NAME" == "osx"   ]]; then brew update                                   ; fi
  # - eval "${MATRIX_EVAL}"

before_script:
     - ${TRAVIS_BUILD_DIR}/travis/before_script.${LABEL}.sh
  # - mkdir sleef.build
  # - cd sleef.build
  # - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../install -DSLEEF_SHOW_CONFIG=1 ..

script:
     - ${TRAVIS_BUILD_DIR}/travis/script.${LABEL}.sh
  # - make -j 2 all
  # - export CTEST_OUTPUT_ON_FAILURE=TRUE
  # - ctest --verbose -j 2
  # - make install
